enum CarSortByInput {
	DRIVETYPE_DESC
	EXPIRATIONDATE_ASC
	PLAQUENUMBER_DESC
	TYPE_ASC
	DRIVETYPE_ASC
	EXTERIORCOLOR_DESC
	INTERIORCOLOR_ASC
	TRANSMISSION_DESC
	COMBUSTIBLE_DESC
	EXPIRATIONDATE_DESC
	KILOMETERS_DESC
	_ID_DESC
	PUBLISHDATE_ASC
	PUBLISHDATE_DESC
	PLAQUENUMBER_ASC
	BRAND_ASC
	COMBUSTIBLE_ASC
	INTERIORCOLOR_DESC
	KILOMETERS_ASC
	YEAR_ASC
	BRAND_DESC
	EXTERIORCOLOR_ASC
	PRICE_ASC
	TYPE_DESC
	MODEL_ASC
	PASSENGERS_DESC
	YEAR_DESC
	TRANSMISSION_ASC
	_ID_ASC
	MODEL_DESC
	PASSENGERS_ASC
	PRICE_DESC
}

input CarInsertInput {
	passengers: Int!
	type: String!
	price: Int!
	year: Int
	interiorColor: String!
	size: CarSizeInsertInput
	expirationDate: String!
	exteriorColor: String!
	publishDate: String!
	kilometers: Int!
	combustible: String!
	plaqueNumber: String
	_id: String
	approved: Boolean!
	brand: String!
	ownerInformation: CarOwnerInformationInsertInput!
	images: [String]!
	driveType: String
	transmission: String!
	model: String!
	sunroof: Boolean!
}

type DeleteManyPayload {
	deletedCount: Int!
}

type Mutation {
	deleteManyCars(query: CarQueryInput): DeleteManyPayload
	deleteOneCar(query: CarQueryInput!): Car
	insertManyCars(data: [CarInsertInput!]!): InsertManyPayload
	insertOneCar(data: CarInsertInput!): Car
	replaceOneCar(query: CarQueryInput, data: CarInsertInput!): Car
	updateManyCars(query: CarQueryInput, set: CarUpdateInput!): UpdateManyPayload
	updateOneCar(query: CarQueryInput, set: CarUpdateInput!): Car
	upsertOneCar(query: CarQueryInput, data: CarInsertInput!): Car
}

scalar ObjectId

input CarOwnerInformationUpdateInput {
	id_unset: Boolean
	name: String
	name_unset: Boolean
	phone: String
	phone_unset: Boolean
	email: String
	email_unset: Boolean
	id: String
}

input CarSizeUpdateInput {
	height_unset: Boolean
	long: Int
	long_inc: Int
	width: Int
	height: Int
	width_unset: Boolean
	width_inc: Int
	long_unset: Boolean
	height_inc: Int
}

type UpdateManyPayload {
	matchedCount: Int!
	modifiedCount: Int!
}

type Query {
	car(query: CarQueryInput): Car
	cars(limit: Int = 100, sortBy: CarSortByInput, query: CarQueryInput): [Car]!
}

input CarSizeInsertInput {
	height: Int
	long: Int
	width: Int
}

input CarOwnerInformationQueryInput {
	id_lte: String
	name_gte: String
	email_lt: String
	email_in: [String]
	email_exists: Boolean
	id_gte: String
	id_exists: Boolean
	AND: [CarOwnerInformationQueryInput!]
	email_gte: String
	name_lte: String
	id_nin: [String]
	name_exists: Boolean
	email_nin: [String]
	id_ne: String
	phone_nin: [String]
	email_gt: String
	name: String
	name_nin: [String]
	phone_gte: String
	phone_ne: String
	email_lte: String
	phone_lte: String
	id_in: [String]
	name_ne: String
	id: String
	name_lt: String
	phone_exists: Boolean
	OR: [CarOwnerInformationQueryInput!]
	phone: String
	phone_lt: String
	name_in: [String]
	id_lt: String
	phone_in: [String]
	id_gt: String
	name_gt: String
	email: String
	email_ne: String
	phone_gt: String
}

type CarOwnerInformation {
	email: String
	id: String
	name: String
	phone: String
}

input CarOwnerInformationInsertInput {
	phone: String
	email: String
	id: String
	name: String
}

type InsertManyPayload {
	insertedIds: [ObjectId]!
}

input CarUpdateInput {
	passengers_inc: Int
	exteriorColor: String
	year: Int
	exteriorColor_unset: Boolean
	passengers_unset: Boolean
	size: CarSizeUpdateInput
	approved: Boolean
	year_unset: Boolean
	kilometers: Int
	plaqueNumber_unset: Boolean
	type_unset: Boolean
	transmission_unset: Boolean
	combustible: String
	passengers: Int
	combustible_unset: Boolean
	ownerInformation: CarOwnerInformationUpdateInput
	approved_unset: Boolean
	expirationDate_unset: Boolean
	_id: String
	size_unset: Boolean
	interiorColor: String
	model: String
	sunroof_unset: Boolean
	year_inc: Int
	driveType_unset: Boolean
	type: String
	transmission: String
	images_unset: Boolean
	expirationDate: String
	brand_unset: Boolean
	kilometers_unset: Boolean
	driveType: String
	interiorColor_unset: Boolean
	plaqueNumber: String
	publishDate_unset: Boolean
	publishDate: String
	sunroof: Boolean
	images: [String]
	price_unset: Boolean
	_id_unset: Boolean
	ownerInformation_unset: Boolean
	brand: String
	price_inc: Int
	kilometers_inc: Int
	model_unset: Boolean
	price: Int
}

input CarQueryInput {
	price_exists: Boolean
	size_exists: Boolean
	_id_lte: String
	images_nin: [String]
	driveType_lte: String
	brand_gt: String
	year_lt: Int
	expirationDate_lt: String
	passengers_in: [Int]
	price_ne: Int
	brand_gte: String
	brand_exists: Boolean
	plaqueNumber_gte: String
	type_exists: Boolean
	AND: [CarQueryInput!]
	publishDate_ne: String
	price_gte: Int
	combustible_nin: [String]
	exteriorColor_ne: String
	driveType_nin: [String]
	ownerInformation: CarOwnerInformationQueryInput
	publishDate_lte: String
	interiorColor_gte: String
	kilometers_lte: Int
	publishDate_nin: [String]
	transmission_nin: [String]
	_id_gt: String
	combustible_lt: String
	kilometers_nin: [Int]
	combustible_lte: String
	publishDate_gte: String
	model_nin: [String]
	plaqueNumber_gt: String
	passengers_lte: Int
	year_ne: Int
	transmission_gt: String
	sunroof: Boolean
	year_nin: [Int]
	driveType_gte: String
	_id_ne: String
	publishDate_gt: String
	expirationDate_gt: String
	transmission_exists: Boolean
	passengers_ne: Int
	interiorColor_exists: Boolean
	model_exists: Boolean
	passengers_nin: [Int]
	brand_in: [String]
	passengers_exists: Boolean
	approved_ne: Boolean
	_id_exists: Boolean
	type_in: [String]
	combustible_gt: String
	interiorColor: String
	driveType_exists: Boolean
	publishDate: String
	plaqueNumber_exists: Boolean
	combustible: String
	kilometers_exists: Boolean
	passengers_lt: Int
	interiorColor_lt: String
	expirationDate_gte: String
	type: String
	brand_lte: String
	year_in: [Int]
	type_ne: String
	combustible_ne: String
	exteriorColor_gte: String
	kilometers_ne: Int
	_id_nin: [String]
	_id_gte: String
	transmission_lt: String
	interiorColor_nin: [String]
	type_nin: [String]
	expirationDate_nin: [String]
	plaqueNumber_nin: [String]
	_id_lt: String
	exteriorColor_nin: [String]
	exteriorColor_lte: String
	exteriorColor: String
	type_lte: String
	kilometers_lt: Int
	kilometers_gte: Int
	price_lt: Int
	expirationDate_ne: String
	price_lte: Int
	price_nin: [Int]
	kilometers_gt: Int
	model_ne: String
	exteriorColor_gt: String
	publishDate_lt: String
	kilometers_in: [Int]
	brand: String
	approved_exists: Boolean
	plaqueNumber: String
	_id: String
	combustible_in: [String]
	sunroof_ne: Boolean
	driveType_gt: String
	images_exists: Boolean
	price: Int
	expirationDate_exists: Boolean
	driveType_lt: String
	transmission_in: [String]
	year_lte: Int
	size: CarSizeQueryInput
	price_gt: Int
	kilometers: Int
	publishDate_in: [String]
	type_gte: String
	expirationDate_in: [String]
	driveType: String
	year_gte: Int
	approved: Boolean
	plaqueNumber_lte: String
	passengers_gt: Int
	model_in: [String]
	brand_lt: String
	model_lt: String
	transmission_ne: String
	price_in: [Int]
	model_gte: String
	type_lt: String
	transmission_lte: String
	model: String
	combustible_gte: String
	OR: [CarQueryInput!]
	combustible_exists: Boolean
	driveType_in: [String]
	ownerInformation_exists: Boolean
	plaqueNumber_ne: String
	interiorColor_gt: String
	exteriorColor_exists: Boolean
	exteriorColor_in: [String]
	_id_in: [String]
	exteriorColor_lt: String
	sunroof_exists: Boolean
	type_gt: String
	expirationDate_lte: String
	interiorColor_ne: String
	passengers: Int
	year_gt: Int
	passengers_gte: Int
	year: Int
	images: [String]
	images_in: [String]
	transmission: String
	brand_nin: [String]
	interiorColor_in: [String]
	publishDate_exists: Boolean
	expirationDate: String
	interiorColor_lte: String
	plaqueNumber_in: [String]
	plaqueNumber_lt: String
	model_lte: String
	transmission_gte: String
	driveType_ne: String
	year_exists: Boolean
	model_gt: String
	brand_ne: String
}

input CarSizeQueryInput {
	height_exists: Boolean
	width_gte: Int
	width_in: [Int]
	long_exists: Boolean
	height_gt: Int
	long_in: [Int]
	width_lt: Int
	height_gte: Int
	height_lte: Int
	AND: [CarSizeQueryInput!]
	height_nin: [Int]
	width_ne: Int
	height_ne: Int
	long_nin: [Int]
	long_lt: Int
	width_gt: Int
	height: Int
	width_nin: [Int]
	height_in: [Int]
	OR: [CarSizeQueryInput!]
	long_gt: Int
	width: Int
	long_lte: Int
	long_gte: Int
	height_lt: Int
	long: Int
	width_exists: Boolean
	long_ne: Int
	width_lte: Int
}

type Car {
	_id: String!
	approved: Boolean!
	brand: String!
	combustible: String!
	driveType: String
	expirationDate: String!
	exteriorColor: String!
	images: [String]!
	interiorColor: String!
	kilometers: Int!
	model: String!
	ownerInformation: CarOwnerInformation!
	passengers: Int!
	plaqueNumber: String
	price: Int!
	publishDate: String!
	size: CarSize
	sunroof: Boolean!
	transmission: String!
	type: String!
	year: Int
}

type CarSize {
	height: Int
	long: Int
	width: Int
}
